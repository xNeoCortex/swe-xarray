name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    env:
      ZARR_V3_EXPERIMENTAL_API: 1
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

          if [[ ${{ matrix.os }} == windows* ]] ;
          then
            if [[ ${{ matrix.python-version }} != "3.13" ]]; then
              echo "CONDA_ENV_FILE=ci/requirements/environment-windows.yml" >> $GITHUB_ENV
            else
              echo "CONDA_ENV_FILE=ci/requirements/environment-windows-3.13.yml" >> $GITHUB_ENV
            fi
          elif [[ "${{ matrix.env }}" != "" ]] ;
          then
            if [[ "${{ matrix.env }}" == "flaky" ]] ;
            then
              echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
              echo "PYTEST_ADDOPTS=-m 'flaky or network' --run-flaky --run-network-tests -W default" >> $GITHUB_ENV
            else
              echo "CONDA_ENV_FILE=ci/requirements/${{ matrix.env }}.yml" >> $GITHUB_ENV
            fi
            if [[ "${{ matrix.env }}" == "min-all-deps" ]] ;
            then
              # Don't raise on warnings
              echo "PYTEST_ADDOPTS=-W default" >> $GITHUB_ENV
            fi
          else
            if [[ ${{ matrix.python-version }} != "3.13" ]]; then
              echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
            else
              echo "CONDA_ENV_FILE=ci/requirements/environment-3.13.yml" >> $GITHUB_ENV
            fi
          fi

          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: xarray-tests
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            python=${{matrix.python-version}}
            conda

      # We only want to install this on one run, because otherwise we'll have
      # duplicate annotations.
      - name: Install error reporter
        if: ${{ matrix.os }} == 'ubuntu-latest' and ${{ matrix.python-version }} == '3.12'
        run: |
          python -m pip install pytest-github-actions-annotate-failures

      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          conda info -a
          conda list
          python xarray/util/print_versions.py

      - name: Import xarray
        run: |
          python -c "import xarray"

      - name: Restore cached hypothesis directory
        uses: actions/cache@v4
        with:
          path: .hypothesis/
          key: cache-hypothesis
          enableCrossOsArchive: true
          save-always: true

      - name: Run tests
        run: python -m pytest -n 4
          --timeout 180
          --cov=xarray
          --cov-report=xml
          --junitxml=pytest.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test results for ${{ runner.os }}-${{ matrix.python-version }} ${{ matrix.env }}
          path: pytest.xml